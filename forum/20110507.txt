http://ai.obrazec.ru/forum/viewtopic.php?p=28690#p28690
[quote="victorst"]ваш проект называется "Зернышко", но все гипнотические телодвижения вы делаете вокруг шелухи этого зернышка.[/quote]
Виктор прав. Слово Kernel действительно переводится как ядро, ядрышко, зернышко. И действительно наши движения происходят вокруг да около разных направлений ИИ, с метанием от одного подхода к другому. И самого "зернышка" из-за всей этой шелухи пока не видно. Да и не совсем понятно пока как можно выделить это "зернышко" среди всех существующих работ в области ИИ.

Я писал ранее, что методики создания ИР пока нет, поэтому не известно пока какой именно подход окажется верным. Возможно потребуется гибридный подход из разных составляющих. Например: нейросеть на входе + преобразование в семантический вид + логический вывод + решение теорем + генетический аппарат для обучения и т.д.
Целью проекта AIKernel является выделение общих вещей для разных подходов, поиск точек взаимодействия и т.д. Другими словами, целью проекта AIKernel является создание универсального ядра для разных "модулей" ИИ.


http://www.gotai.net/forum/Default.aspx?postid=50107#50107
[QUOTE]Автор: гость
из существенных результатов локальной группы в области AI - только базовая модель ядра AI[/QUOTE]У меня есть несколько вопросов:
1. Какое название вашего проекта;
2. Где посмотреть подробнее (ссылка);
3. Наработки (в том числе исходный код) открыты или закрыты;
4. Какую конечную цель вы преследуете?

У меня сложилось впечатление, что вы хотите получить выгоду от разработки ИИ и от создания ИР - это вполне естественно. Скорее всего, какие-то промежуточные результаты можно будет комерциализировать. Но, в целом, боюсь вас разочаровать. Нужно понимать, что даже если удастся создать ИР, то это будет индивидуальное существо со своими целями, со своими желаниями и т.д.

Создание ИР - это что-то на подобие желание завести детей. Так сказать для продолжения своего рода. Многие хотят, чтобы наши дети были похожи на нас, чтобы не совершали тех ошибок, которые совершали мы и т.д. Но оно так не получается. Каждый человек идет по своему собственному пути. Да, мы может как-то влиять, воспитывать, но все-равно он рано или поздно становится самостоятельным личностями и выходит из под нашего контроля. И здесь остается лишь надеяться, что мы дали ему правильные знания, которые позволят ему стать хорошим человеком и т.д.

То же самое я вижу и в создании ИР. Вы вряд-ли получите какую-то выгоду для себя. Возможно следующие поколения, наши внуки и правнуки, и получат более удобную жизнь с разработками ИИ, как мы сейчас пользуется разработками наших предков (начиная от колеса, письменности и заканчивая эллекричеством и интернетом). Это нужно понимать и перестать везде и во всем искать собственную выгоду. Но, естественно, в разумных пределах. :)











http://ai.obrazec.ru/forum/viewtopic.php?p=28697#p28697
[quote="vchc"]на данный момент меня куда больше занимают принципы и архитектура самого ядра.[/quote]
Я попытался описать основные принципы архитектуры вот тут: http://aikernel.org/develop/architecture/index.ru.html . Это не окончательный вариант и, возможно, что все это нужно будет изменить. Тем более, на данном этапе, это будет сделать довольно легко. А вот после старта реализации менять принципы и архитектуру будет крайне не приятно (придется переписывать уже реализованный и отлаженный код). Попробую прокомментировать, что имел в виду. И так, по порядку:
[quote][b]Основное[/b]
[list][*]Программы и модули AIKernel должны быть написаны на языке, который компилируется в выполняемый машинный код. То есть для выполнения программы не должно требоваться наличие каких либо сторонних виртуальных машин и т.п.[/quote]
Не хочу чтобы проект был ограничен какой-то одной платформой. По крайней мере базовая часть, по моему, должна иметь возможность компилироваться и для ПК и для микроконтроллеров.[/list]
[quote][b]Сборка[/b]
[list][*]Сборка - это набор программ и модулей, собранных в одном месте.
[*]Сборка создается, как правило, для решения определенных задач.
[*]Сборка может быть представлена в виде одной программы или системы из нескольких программ.[/list][/quote]
Сборки - это готовые к применению продукты. Каждый может собрать систему "под себя" с необходимым ему набором функционала. Кто-то может даже создавать коммерческие сборки с добавлением каких-то дополнительных модулей, или предоставлять коммерческую поддержку.
[quote][b]Ядро[/b]
[list][*]Ядро - это набор основных модулей для работы программы или системы.
[*]В каждой сборке может быть различный набор базовых модулей.[/list][/quote]
Какие именно модули должны входить в состав ядра мне пока не ясно. Но каждый сможет собрать как ядро, так и сборку "под себя".
[quote][b]Модуль[/b]
[list][*]Модуль - это обособленный набор процедур и функций. Модуль включает в себя так же необходимые данные для работы модуля.
[*]Модуль может быть представлен в виде составной части основной программы, в виде дополнительной библиотеки или в виде отдельной программы.
[*]Взаимодействие модулей осуществляется прямым вызовом процедур и функций, а так же путем передачи сообщений и команд.
[*]Модуль может быть подключен к системе в момент запуска или после запуска, во время работы.[/list][/quote]
Модуль - это аналог библиотеки функций (lib), но функции модулей AIKernel, в первую очередь, должны быть нацелены на обработку знаний. Ниже я опишу свое мнение каком виде лучше представить знания в AIKernel.
[quote][b]Runtime (минимальная базовая среда выполнения)[/b]
[list][*]Минимальная базовая среда выполнения AIKernel - это минимальный набор базовых функций, обеспечивающих запуск и работу модулей.
[*]Минимальная базовая среда выполнения так же содержит в себе информацию о загруженных модулях.[/list][/quote]
Я предполагаю, что минимальный набор функций должен быть действительно минимальным и включать примерно такие функции:
[code]Runtime_Modules_AddModule;
Runtime_Modules_DeleteModule;
Runtime_Modules_GetByName;
Runtime_Modules_Count;[/code]
Кстати, по наименованиям типов, функций и по стилистике написания кода - это отдельная темя для обсуждения. Я понимаю, что можно создавать классы и реализовывать методы. Тогда можно вызывать методы объекта и это будет более красиво написано:
[code]Runtime.Modules.AddModule;
Runtime.Modules.DeleteModule;
Runtime.Modules.GetByName;
Runtime.Modules.Count;[/code]
или
[code]Runtime->Modules->AddModule;
Runtime->Modules->DeleteModule;
Runtime->Modules->GetByName;
Runtime->Modules->Count;[/code]
Но я за простую реализацию на простом процедурном языке (например на чистом Си).
[quote][b]Хранение данных[/b]
[list][*]Для хранения данных могут использоваться все доступные средства.
[*]Основные модули AIKernel должны использовать только открытые и свободные стандарты и форматы передачи и хранения данных.
[*]Для всех остальных модулей и программ, так же, желательно использование только открытых и свободных стандартов и форматов.[/list][/quote]
Я стараюсь сразу отгородится от всех потенциальных проблем в будущем. Поэтому буду настаивать на использовании свободных лицензий и свободных форматов в проекте AIKernel!
[quote][b]Знания[/b]
[list][*]Знания в системе могут быть представлены в разных видах.
[*]Желательно представление знаний в виде сущностей.
[*]Различные данные и знания могут храниться на локальной машине, в удаленном хранилище, а так же могут использоваться распределенные средства хранения данных и знаний.[/list][/quote]
По поводу сущностей я уже писал где-то на форуме. Идея в том, что каждую элементарную единицу знаний записывать в виде массива байтов + назначать уникальный идентификатор + указывать тип сущности (для того, чтобы знать как его следует обрабатывать). А для хранения в памяти можно предложить такую структуру для сущности:
[code]type
  TAEntity = packed record
    EntityID: Integer;
    EntityType: Integer;
    DataLength: Integer;
    Data: Pointer;
  end;[/code]
При этом в таком виде можно будет записать любую информацию. В частности каждой отдельной сущностью могут быть записаны классы, индивиды(объекты) и их связи для онтологии.
[quote][b]Сущности[/b]
Привожу цитаты из книги "Общение с ЭВМ на естественном языке". (стр. 133)
3.2. Модель окружающей среды. Исходные понятия.
3.2.1. Основные понятия. Рассмотрение основ начнем с понятия "сущность". Под сущностью будем понимать объекты, отношения, множества, ситуации, события, моменты времени и т.п. Другими словами, не существует ничего, что не являлось бы сущностью. В процессе описания выделим из всего множества сущностей те, которые будут нас интересовать.[/quote]




http://ai.obrazec.ru/forum/viewtopic.php?p=28698#p28698
[quote="victorst"][quote="vchc"]камнем преткновения встанет набор используемых в проекте набор аксиом. А именно:
1. Что такое интеллект, разум....[/quote]Полностью согласен.[/quote]
А я не согласен. И могу объяснить почему. Дело в том, что мы еще не пришли к единому мнению по поводу самых основ. А именно базовых принципов построения проекта, его целей и путей реализации. Рано еще спорить о том что такое интеллект и разум. Иначе на этом споре все и закончится, т.к. у каждого свое мнение на этот счет и у каждого свой набор инструментов, с которым он знаком. А главная проблема в том, что мы не хотим поставить себя на место собеседника и понять почему с его точки зрения должно быть именно так, а не иначе. Прежде нужно научиться слушать и слышать друг друга, нужно научиться разговаривать на одном языке, научиться пользоваться одинаковыми инструментами и технологиями.

О какой совместной разработке Искусственного Разума мы говорим, если каждый будет его реализовывать своим инструментарием без обеспечения взаимодействия с разработками других участников? Пожалуйста, я бы не хотел, чтобы в этой ветке шло обсуждение вопросов что такое "интеллект" и что такое "разум". Это долгий разговор и для этого можно завести отдельную ветку. Аналогично можно завести ветки для обсуждения самого "крутого" языка программирования или тему для обсуждения "кто правее".

[quote]Идём ли мы последовательно или сразу пытаемся получить какое-то практическое решение. Попытки быстро перейти к реализациям ВПД мне кажутся очень очень преждевременными. Понятно, что хочется получить полезные практические результаты уже на начальной стадии, но лично у меня такой спешки нет и более того есть сильное понимание бессмысленности такого желания без наличия базовой архитектуры.[/quote]
К сожалению, при создании ИР получить быстрый результат не получится. Но, при этом, никто не запрещает использовать созданные наработки с своих проектах, в том числе и коммерческих. В общем-то в рамках проекта AIKernel можно попробовать создать какой-то готовый продукт. Однако, основные принципы AIKernel, должны быть обеспечены (а именно открытость разработок AIKernel).
