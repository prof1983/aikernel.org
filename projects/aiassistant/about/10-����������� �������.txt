Техническое задание

На этой странице указаны укрупненные задачи фронта работ на ближайшее время.

Все задачи нужно решать в соответствии с Getting Real. Все задачи решаются итеративным методом. То есть сначала предлагается какая-либо функциональная часть, потом реализуется ее основная идея, далее, если эта функциональная часть необходима, то производится ее доработка до тех пор пока это актуально.
Правила редактирования технического задания

Первоначально обсуждение задумки о новой функциональности производится в форуме. Затем выбирается или назначается главный редактор технического задания конкретной функциональной задумке. После написания ТЗ еще раз все проверяется на правильность мыслей и техническое задание принимается к исполнению (помещается в раздел сайта TODO). Затем выбирается или назначается исполнитель.
Введение

AIAssistant разрабатывается как микроядро с присоединяемыми модулями (плугинами). Прототипы:

    Операционная система Minix (http://www.minix3.ru/ http://www.minix3.org/)
    Среда разработки Eclipse (http://www.eclipse.org/)
    Интернет-клиент для общения используя различные протоколы Miranda (http://www.miranda-im.org/)

Содержание

    Общие требования
    Ядро
    Графический интерфейс пользователя (GUI)
    Плугины

Последовательность разработки

    Первый этап - ядро
    Второй этап - главное окно
    Третий этап - напоминалка
    Четвертый этап

— Prof1983 2007/07/22 11:01


Техническое задание на разработку ядра программы AIAssistant

На первом этапе создается основа системы - ядро.

    Создать класс для FIPA-ACL сообщений AclMessage
    Создать общий класс для агентов и приложений - Module
    Создать класс для агентов Agent
    Создать класс для AI-приложений AIProgram
    Создать класс-микроядро Core
    Создать класс-ядро Kernel - в нем будет находится объект микроядро, агенты и приложения

Смотрите Первый этап

— Prof1983 2007/07/22 11:24



Plugins (техническое задание)

Называют плугины или плагины.

Система AIAssistant состоит из микроядра и набора подключаемых модулей - плугинов.

Плугин (модуль) включает:

    XML файл описания плугина;
    выполняемые файлы;
    файлы данных.

XML файл описания плугина имеет следующий формат (пример):

<?xml version="1.0" encoding="Windows-1251"?>
<plugin
    id="org.aiassistant.fileLogJournal"
    version="2.3.0.v200707242120">

  <about>
    <label lang="ru">FileLogJournal</label>
    <description lang="ru">Модуль записи лог-сообщений в файл</description>
  </about>

  <copyright url="http://www.aiassistant.org/">
    Copyright (c) 2007 AIAssistant organization.
  </copyright>

  <license url="http://www.aiassistant.org/gnu.txt">
  </license>

  <url>
    <update label="AIAssistant.org" url="http://www.aiassistant.org/plugins/filelogjournal/update/"/>
    <discovery label="AIAssistant.org" url="http://www.aiassistant.org/plugins/filelogjournal/update/"/>
  </url>

  <requires>
    <import plugin="org.aiassistant.core" version="0.2" minVersion="0.0" maxVersion="1.0">
      <url>
        <update label="AIAssistant.org" url="http://www.aiassistant.org/core/update/"/>
      </url>
    </import>
    <import plugin="org.aiassistant.ui" version="0.2" minVersion="0.0" maxVersion="1.0">
      <url>
        <update lavel="AIAssistant.org" url="http://www.aiassistant.org/ui/update/"/>
      </url>
    </import>
  </requires>

  <binFiles>
  </binFiles>

  <dataFiles>
  </dataFiles>

</plugin>

Смотрите также

    Plugin

— Prof1983 2007/07/29 14:24




Первый этап - ядро

На первом этапе создается основа системы - ядро.

    Создать AIAssistant.exe, AIAssistant.ini, AIAssistant.config
    Создать класс для FIPA-ACL сообщений AclMessage
    Создать общий класс для агентов и приложений - Module
    Создать класс для агентов Agent
    Создать класс для AI-приложений AIProgram
    Создать класс-микроядро Core
    Создать класс-ядро Kernel - в нем будет находится объект микроядро, агенты и приложения

— Prof1983 2007/07/22 11:16



Второй этап

На втором этапе оформляется внешний вид программы, логика взаимодействия модулей и дополнительные средства разработки и отладки. Нужно создать главное окно программы. В главном окне должно быть:

    Вкладки с GUI приложений
    Область наблюдения (вкладка) за списком текущих модулей (агентов и приложений)
    Область наблюдения за лог-сообщениями
    Область наблюдения за передаваемыми сообщениями между модулями

— Prof1983 2007/07/22 11:27



Третий этап

Создать модуль - напоминалку. Настройки программы и список напоминаний хранить в AIAssistant.config

— Prof1983 2007/07/22 11:31
